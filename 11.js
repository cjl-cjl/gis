webpackJsonp([11],{603:function(t,n){t.exports='<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n\t<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\r\n\t<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />\r\n\t<title>地图展示</title>\r\n\t<style type="text/css">\r\n\t\tbody,\r\n\t\thtml {\r\n\t\t\tmargin: 0;\r\n\t\t\theight: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t\tposition: absolute;\r\n\t\t}\r\n\r\n\t\t#map {\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 0;\r\n\t\t\tright: 0;\r\n\t\t\tbottom: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\r\n\t\t.drawingToolbar {\r\n\t\t\tz-index: 999;\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 10px;\r\n\t\t\t;\r\n\t\t\tleft: 10px;\r\n\t\t\tright: 10px;\r\n\t\t\twidth: 100%;\r\n\t\t\tline-height: 1;\r\n\t\t}\r\n\r\n\t\t.drawingToolbar a {\r\n\t\t\tcolor: #666;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tbackground: #fff;\r\n\t\t\tcursor: pointer;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\twidth: auto;\r\n\t\t\tpadding: 10px;\r\n\t\t}\r\n\t</style>\r\n</head>\r\n\r\n<body>\r\n\t<script type="text/javascript" src="https://api.map.baidu.com/api?v=2.0&ak=您的密钥"><\/script>\r\n\t<script type="text/javascript" src="https://api.map.baidu.com/library/GeoUtils/1.2/src/GeoUtils_min.js"><\/script>\r\n\t<script src="https://libs.baidu.com/jquery/1.9.0/jquery.js"><\/script>\r\n\t<div id="map"></div>\r\n\t<div class="drawingToolbar">\r\n\t\t<div id="divInfo"></div>\r\n\t\t<a onclick="getPoints()">随机生成24个点</a>\r\n\t\t<a onclick="drivingSearch()">生成驾车路线</a>\r\n\t\t<a onclick="clearOverlay()">清除画布</a>\r\n\t</div>\r\n</body>\r\n\r\n</html>\r\n<script>\r\n\tvar map;\r\n\tvar driving;//驾车实例\r\n\tvar mkrIcon = \'http://image.tf56.com/dfs/group1/M00/39/80/CiFBClnlv4qAFihjAAACvsfc7-g019.png\';\r\n\r\n\t//创建和初始化地图函数：\r\n\tfunction initMap() {\r\n\t\tmap = new BMap.Map("map");\r\n\t\tmap.centerAndZoom(new BMap.Point(120.137323, 30.232054), 12);\r\n\t\tmap.enableScrollWheelZoom();\r\n\t};\r\n\tinitMap();\r\n\tvar points = [];\r\n\r\n\tfunction getPoints() {\r\n\t\tvar res = "", minX = 120.137323, minY = 30.232054, x = 0, y = 0, pt = null;\r\n\t\tfor (var i = 0; i < 24; i++) {\r\n\t\t\tx = minX + getRandom();\r\n\t\t\ty = minY + getRandom();\r\n\t\t\tpt = new BMap.Point(x, y);\r\n\t\t\tpoints.push(pt);\r\n\t\t\tvar marker = newMark(pt);\r\n\t\t\tmap.addOverlay(marker);\r\n\t\t\tvar label = newLabel(i + 1);\r\n\t\t\tmarker.setLabel(label);\r\n\t\t}\r\n\t\tmap.setViewport(points);\r\n\t}\r\n\r\n\tfunction getRandom() {\r\n\t\treturn Math.random() / 2;\r\n\t}\r\n\r\n\tfunction drivingSearch() {\r\n\t\tif (points.length == 0) {\r\n\t\t\talert(\'请先生成驾车点!\');\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar pts = points;\r\n\t\tshowPoly(pts);\r\n\t}\r\n\r\n\tfunction showPoly(list) {\r\n\t\tvar group = Math.floor(list.length / 11);\r\n\t\tvar mode = list.length % 11;\r\n\t\tdrivingRoute();\r\n\t\tfor (var i = 0; i < group; i++) {\r\n\t\t\tvar waypoints = list.slice(i * 11 + 1, (i + 1) * 11);\r\n\t\t\tdriving.search(list[i * 11], list[(i + 1) * 11 - 1], { waypoints: waypoints });//waypoints途经点集合，最多支持10个途经点，可以是名称也可以是坐标\r\n\t\t}\r\n\t\tif (mode != 0) {\r\n\t\t\tvar waypoints = list.slice(group * 11, list.length - 1);//\r\n\t\t\tdriving.search(list[group * 11], list[list.length - 1], { waypoints: waypoints });\r\n\t\t}\r\n\t}\r\n\r\n\tfunction newMark(pt) {\r\n\t\tvar icon = new BMap.Icon(mkrIcon, new BMap.Size(22, 32), {\r\n\t\t\tanchor: new BMap.Size(10, 30),\r\n\t\t\timageOffset: new BMap.Size(0, 0)\r\n\t\t});;\r\n\t\treturn new BMap.Marker(pt, { icon: icon });\r\n\t}\r\n\r\n\tfunction newLabel(num) {\r\n\t\tvar opts = {\r\n\t\t\toffset: new BMap.Size(6, 5)    //设置文本偏移量\r\n\t\t}\r\n\t\tvar label = new BMap.Label(num, opts);\r\n\t\tlabel.setStyle({\r\n\t\t\tcolor: "#fff",\r\n\t\t\tfontSize: "12px",\r\n\t\t\theight: "12px",\r\n\t\t\tlineHeight: "12px",\r\n\t\t\tborder: \'0\',\r\n\t\t\tbackground: \'#24a1ff\'\r\n\t\t});\r\n\t\treturn label\r\n\t}\r\n\r\n\tfunction drivingRoute() {\r\n\t\tdriving = new BMap.DrivingRoute(map, {\r\n\t\t\tpolicy: BMAP_DRIVING_POLICY_LEAST_DISTANCE//最短距离\r\n\t\t});\r\n\t\tdriving.setSearchCompleteCallback(function (results) {\r\n\t\t\tonSearchComplete(results);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction onSearchComplete(results) {\r\n\t\tif (driving.getStatus() == BMAP_STATUS_SUCCESS) {\r\n\t\t\tvar plan = driving.getResults().getPlan(0);\r\n\t\t\tvar num = plan.getNumRoutes();\r\n\t\t\tfor (var j = 0; j < num; j++) {\r\n\t\t\t\tvar pts = plan.getRoute(j).getPath();    //通过驾车实例，获得一系列点的数组\r\n\t\t\t\tvar polyline = newLine(pts);//创建线路    \r\n\t\t\t\tmap.addOverlay(polyline);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction newLine(pts) {\r\n\t\tvar opts = {\r\n\t\t\tstrokeColor: "blue",\r\n\t\t\tstrokeWeight: 6,\r\n\t\t\tstrokeOpacity: 0.5\r\n\t\t}\r\n\t\treturn new BMap.Polyline(pts, opts);\r\n\t}\r\n\r\n\tfunction clearOverlay() {\r\n\t\tmap.clearOverlays();\r\n\t}\r\n<\/script>'}});